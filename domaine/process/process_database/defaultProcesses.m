function processes = defaultProcesses()

rrf.subjects = cell.empty();
rrf.raw_files = cell.empty();

processes = struct(...
    'GeneralProcess', struct(...
        'create_subject', struct(...
                                'Parameter', struct(...
                                    'subject_name', char.empty(), ...
                                    'anatomy_path', char.empty()...
                                    ), ...
                                'fName', 'process_import_anatomy', ...
                                'AnalyzerFct', @createSubject),...
        'review_raw_files', struct(...
                                'Parameter', rrf, ...
                                'fName', 'process_import_data_raw', ...
                                'AnalyzerFct', @reviewRawFiles),...
        'export_to_bids', struct(...
                                'Parameter', struct(...
                                    'folder', char.empty(), ...
                                    'data_file_format', char.empty...
                                    ), ...
                                'fName', 'process_export_bids', ...
                                'AnalyzerFct', @exportToBids),...
        'reject_bad_trials', struct(...
                                'Parameter', struct(...
                                    'meggrad', double.empty(),...
                                    'megmag', double.empty(),...
                                    'eeg', double.empty(),...
                                    'seeg_ecog', double.empty(),...
                                    'eog', double.empty(),...
                                    'ecg', double.empty()...
                                    ), ...
                                'fName', 'process_detectbad', ...
                                'AnalyzerFct', @rejectBadTrials),...
        'import_events', struct(...
                                'Parameter', struct(...
                                    'subject', char.empty(), ...
                                    'event', char.empty,...
                                    'epoch', double.empty...
                                    ), ...
                                'fName', 'process_import_data_event', ...
                                'AnalyzerFct', @importEvents),...
        'import_time', struct(...
                                'Parameter', struct(...
                                    'time_window', double.empty()...
                                    ), ...
                                'fName', 'process_import_data_time', ...
                                'AnalyzerFct', @importTime),...
        'average', struct(...
                                'Parameter', struct(...
                                    'average_type', char.empty(), ...
                                    'average_function', char.empty...
                                    ), ...
                                'fName', 'process_average', ...
                                'AnalyzerFct', @average),...
        'compute_sources', struct(...
                                'Parameter', struct(...
                                    'to_run', true ...
                                    ), ...
                                'fName', 'process_inverse_2018', ...
                                'AnalyzerFct', @computeSources),...
        'detect_cardiac_artifact', struct(...
                                'Parameter', struct(...
                                    'channel', char.empty(), ...
                                    'event', char.empty...
                                    ), ...
                                'fName', 'process_evt_detect_ecg', ...
                                'AnalyzerFct', @detectCardiacArtifact),...
        'detect_blink_artifact', struct(...
                                'Parameter', struct(...
                                    'channel', char.empty(), ...
                                    'event', char.empty...
                                    ), ...
                                'fName', 'process_evt_detect_eog', ...
                                'AnalyzerFct', @detectBlinkArtifact),...
        'export_data', struct(...
                                'Parameter', struct(...
                                    'folder', char.empty(), ...
                                    'file_format', char.empty...
                                    ), ...
                                'fName', '', ...
                                'AnalyzerFct', @exportData)),...
    'SpecificProcess', struct(...
        'notch_filter', struct(...
                                'Parameter', struct(...
                                    'frequence', double.empty() ...
                                    ), ...
                                'fName', 'process_notch', ...
                                'AnalyzerFct', @notchFilter),...
        'band_pass_filter', struct(...
                                'Parameter', struct(...
                                    'frequence', double.empty() ...
                                    ), ...
                                'fName', 'process_bandpass', ...
                                'AnalyzerFct', @bandPassFilter),...
        'power_spectrum_density', struct(...
                                'Parameter', struct(...
                                    'window_length', double.empty() ...
                                    ), ...
                                'fName', 'process_psd', ...
                                'AnalyzerFct', @powerSpectrumDensity),...
        'detect_other_artifact', struct(...
                                'Parameter', struct(...
                                    'low_frequence', logical.empty(), ...
                                    'high_frequence', logical.empty...
                                    ), ...
                                'fName', 'process_evt_detect_badsegment', ...
                                'AnalyzerFct', @detectOtherArtifact),...
        'ica', struct(...
                                'Parameter', struct(...
                                    'number_of_components', double.empty() ...
                                    ), ...
                                'fName', 'process_ica', ...
                                'AnalyzerFct', @ica)),...
    'EEG_Process', struct(...
        'add_eeg_position', struct(...
                                'Parameter', struct(...
                                    'file_type', char.empty(), ...
                                    'electrode_file', char.empty(), ...
                                    'cap', char.empty() ...
                                    ), ...
                                'fName', 'process_channel_addloc', ...
                                'AnalyzerFct', @addEegPosition),...
       'refine_registration', struct(...
                                'Parameter', struct(...
                                    'to_run', true ...
                                    ), ...
                                'fName', 'process_headpoints_refine', ...
                                'AnalyzerFct', @refineRegistration),...
       'project_electrode_on_scalp', struct(...
                                'Parameter', struct(...
                                    'to_run', true ...
                                    ), ...
                                'fName', 'process_channel_project', ...
                                'AnalyzerFct', @projectElectrodesOnScalp), ...
        'average_reference', struct(...
                                'Parameter', struct(...
                                    'to_run', true ...
                                    ), ...
                                'fName', 'process_eegref', ...
                                'AnalyzerFct', @averageReference)),...
    'MEG_Process', struct(...
        'convert_epochs_to_continue', struct(...
                                'Parameter', struct(...
                                    'to_run', true ...
                                    ), ...
                                'fName', 'process_ctf_convert', ...
                                'AnalyzerFct', @convertEpochsToContinue),...
        'ssp_cardiac', struct(...
                                'Parameter', struct(...
                                    'event', char.empty()...
                                    ), ...
                                'fName', 'process_ssp_ecg', ...
                                'AnalyzerFct', @sspCardiac),...
        'ssp_blink', struct(...
                                'Parameter', struct(...
                                    'event', char.empty()...
                                    ), ...
                                'fName', 'process_ssp_eog', ...
                                'AnalyzerFct', @sspBlink),...
        'ssp_generic', struct(...
                                'Parameter', struct(...
                                    'event', char.empty()...
                                    ), ...
                                'fName', 'process_ssp', ...
                                'AnalyzerFct', @sspGeneric),...
        'remove_simultaneaous_events', struct(...
                                'Parameter', struct(...
                                    'event_to_remove', char.empty(), ...
                                    'event_to_target', char.empty()...
                                    ), ...
                                'fName', 'process_evt_remove_simult', ...
                                'AnalyzerFct', @removeSimultaneaousEvents)));
                        