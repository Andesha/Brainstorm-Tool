function parameters = AverageParameter()
    p1 = ParameterFactory.create('average_type', 'char', char.empty(), getPossibleGroups());
    p1.setConverterFunction(@convertGroupToIndex);
    p2 = ParameterFactory.create('average_function', 'char', char.empty(), getPossibleAverageFunctions());
    p2.setConverterFunction(@convertAverageFunctionToIndex);
    parameters = {p1, p2};
end

function possibleGroups = getPossibleGroups()
    possibleGroups = {...
        'everything', ...
        'by subject', ...
        'by folder (subject avg)', ...
        'by folder (grand avg)', ...
        'by trial group (folder avg)', ...
        'by trial group (subject avg)', ...
        'by trial group (grand avg)', ...
        };        
end

function possibleAverageFunctions = getPossibleAverageFunctions()
    possibleAverageFunctions = {...
        'arithmetic average', ...
        'average absolute values', ...
        'root mean square (RMS)', ...
        'standard deviation', ...
        'standard error', ...
        'arithmetic average and standard deviation', ...
        'arithmetic average and standard error', ...
        'median', ...
        };        
end

function index = convertGroupToIndex(groupName)
    index = find(cellfun(@(x) strcmpi(groupName, x), getPossibleGroups()));
end

function index = convertAverageFunctionToIndex(avgFunctionName)
    index = find(cellfun(@(x) strcmpi(avgFunctionName, x), getPossibleAverageFunctions()));
end